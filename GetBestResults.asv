mdldata = load('Hansen_networks.mat');

A_dist = mdldata.A_dist;
A = mdldata.adj{1};
d = triu2vec(mdldata.A_dist,1);
avec = triu2vec(A,1);
dist_thr{2} = d<30;
dist_thr{3} = d>=30 & d<=90;
dist_thr{4}= d>90;
dist_thr{1}= d>=0;

d_short = d<30;
d_mid = d>=30 & d<=90;
d_long = d>90;

MdlForms = {'Add','Mult'};
Exponents = {'powerlaw','exponential'};

mdls = 0:9;
NMdls = length(mdls);

for formInd = 1:length(MdlForms)
    mdlform = MdlForms{formInd};

    for expoInd = 1:length(Exponents)

        expo = Exponents{expoInd};

maxKS = zeros(NMdls,100);
DegCorr = zeros(NMdls,100);

%MdlDeg = zeros(NMdls,200);



MAP_names = {'Spatial','Gene coexpression','Receptor similarity','Laminar similarity','Metabolic connectivity','Haemodynamic connectivity','Electrophysiological connectivity','Temporal similarity','Random similarity','Matching'};

for mdlIND = 1:NMdls
    mdl = mdls(mdlIND);

    if mdl == 9
        Output = load(['GNM_TopoMdl',num2str(2),'_',mdlform,'_',expo,'.mat']);
    else
        Output = load(['GNM_Mdl',num2str(mdl),'_',mdlform,'_',expo,'.mat']);
    end

    maxKS(mdlIND,:) = Output.BestFit.(FitType).maxKS;
    bnets = Output.BestFit.(FitType).b;
    DegCorr(mdlIND,:) = Output.BestFit.(FitType).DegCorr;

    n = length(A);
    
    for i = 1:length(bnets)
        b = bnets{i};
        B = zeros(n);
        B(b) = 1;
        B = B + B';
        bvec = triu2vec(B,1);
        %MdlDeg(mdlIND,:) = MdlDeg(mdlIND,:)+sum(B);
    
        for j = 1:4
            thr = dist_thr{j};
            athr = avec.*thr;
            bthr = bvec.*thr;        
    
            %r0(mdlIND,i,j) = sum((athr==0).*(bthr==0))./sum(athr==0);
            R(mdlIND,i,j) = sum(athr.*bthr)./sum(athr);
    
            EdgeFDR(mdlIND,i,j) = sum(athr==0&bthr==1)./sum(bthr);
        end
    
    end

end

    end

end